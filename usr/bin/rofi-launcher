#!/bin/bash

declare -A LABELS
declare -A COMMANDS

###
# List of defined 'Launchers'

# launch programs
COMMANDS["apps"]="rofi-apps"
LABELS["apps"]=""

# open bookmarks
COMMANDS["bookmarks"]="rofi-web-bookmarks"
LABELS["bookmarks"]=""

# search local files
COMMANDS["locate"]="rofi-locate"
LABELS["locate"]=""

# open custom web searches
COMMANDS["websearch"]="rofi-web-search"
LABELS["websearch"]=""

# show clipboard history
COMMANDS["clipboard"]="rofi-clipboard"
LABELS["clipboard"]=""

# show calculator
COMMANDS["calculator"]="rofi-calculator"
LABELS["calculator"]=""

################################################################################
# do not edit below
################################################################################
##
# Generate menu
##
function print_menu()
{
    for key in ${!LABELS[@]}
    do
  echo "$key    ${LABELS}"
     #   echo "$key    ${LABELS[$key]}"
     # my top version just shows the first field in labels row, not two words side by side
    done
}
##
# Show rofi.
##
function start()
{
    # print_menu | rofi -dmenu -p "?=>"
    print_menu | sort | rofi -lines 7 -font "SauceCodePro Nerd Font 13" -dmenu -mesg ">>> Pick your rofi launcher " -i -p "rofi-launchers: "

}


# Run it
value="$(start)"

# Split input.
# grab upto first space.
choice=${value%%\ *}
# graph remainder, minus space.
input=${value:$((${#choice}+1))}

##
# Cancelled? bail out
##
if test -z ${choice}
then
    exit
fi

# check if choice exists
if test ${COMMANDS[$choice]+isset}
then
    # Execute the choice
    eval echo "Executing: ${COMMANDS[$choice]}"
    eval ${COMMANDS[$choice]}
else
 eval  $choice | rofi
 # prefer my above so I can use this same script to also launch apps like geany or leafpad etc (DK)
 #   echo "Unknown command: ${choice}" | rofi -dmenu -p "error"
fi
